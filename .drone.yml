---
kind: pipeline
type: docker
name: test

steps:
  - name: lets
    image: alpine
    pull: always
    commands:
      - |-
        list=$(cat bla.txt)
        for p in $${list}; do
          echo "current p: $p"
          sanitized_package_name=$${p#@*/}
          cat my-file.txt | grep -c drone-convert-service
          echo $?
          cat my-file.txt | grep -c 'vaca'
          echo $?
          echo "sanitized_package_name $${sanitized_package_name}"
          is_package_stage_only=$(cat my-file.txt | grep -c $${sanitized_package_name})
          if [[ $${is_package_stage_only} -ne 0 ]]; then
            continue
          fi
        done
trigger:
  event:
    - push
    - pull_request
# kind: pipeline
# type: docker
# name: production

# steps:
#   - name: sending_to_prod
#     image: alpine
#     commands:
#       - apk add --no-cache git
#       - echo "DEPLOY TO PRODUCTION"
#       - echo "parent build ${DRONE_BUILD_PARENT}"
#       - echo "we're deploying to ${DRONE_DEPLOY_TO}"
#       - echo "current branch [ $(git branch) ]"
#       - >- 
#         git checkout $DRONE_DEPLOY_TO
#         PREVIOUS_MASTER=$(git rev-list -n 1 ${DRONE_DEPLOY_TO})
#         echo "PREVIOUS MASTER [ $PREVIOUS_MASTER ]"

# trigger:
#   event:
#     - promote
#     - push
#     - pull_request
#   branches:
#     - production
#   target:
#     - production
# ---
# kind: pipeline
# type: docker
# name: stagin

# steps:
#   - name: sending_to_stage
#     image: alpine
#     commands:
#       - echo "DEPLOY TO stage"

# trigger:
#   event:
#     - promote
#     - push
#     - pull_request
#   branches:
#     - stage
#   target:
#     - stage
# ---
# kind: pipeline
# type: docker
# name: tag-changes

# trigger:
#   event:
#     - tag

# steps:
#   - name: on-tags-changes
#     image: alpine
#     commands:
#       - echo "tags changes"
# ---
# kind: pipeline
# type: docker
# name: util pipeline A

# steps:
#   - name: PREF a
#     image: alpine
#     commands:
#       - echo "A"
# ---
# kind: pipeline
# type: docker
# name: util pipeline B

# steps:
#   - name: PREF b
#     image: alpine
#     commands:
#       - echo "B"
#       - sleep 9
# ---
# kind: pipeline
# type: docker
# name: tag pipeline

# steps:
#   - name: tagging stuff
#     image: animal505/ffff
#     pull: always
#     settings:
#       DRONE_BUILD_STATUS: ${DRONE_BUILD_STATUS}

